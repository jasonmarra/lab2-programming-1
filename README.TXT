2.the value returned when printed=0
3. if u put extra money you dont get money back.
6. for labclass it should be public class labclass and for student public class student.
7. yes it does matter.
8.yes it is possible.
9. you cant delete the word class because it takes out the whole class(no longer class.
10.the constructor is: public ticketMachine(int price),the fields are: private int price. the methods are:getPrice(),getamount().
11.the two differences are the constructor has to have the same name to the class it belongs to. second is the constructor has no return type.
12. the first is an int, two and three are class types.
13.names are alive,game and tutor.
14. class names need to start in captial letter
16. Yes, or there will be a error.
17. private int status;
18.the student class
19.two parameters,title and double price.
20.yes if you dont assign the parameters it vanishes
21. name =petsname
22.public Date(String month, int day ,int year)
24.you have to see how much money is in the machine.
25. No
27.the arrow message is not a statement.
28.getPrice uses public int, while printTicket uses public void.
31.score= score+ points.
32, yes
33. price= price - amount;
34. public void setAge
age= curentAge
35. public void setAlive
Alive=status;
36.any price related method=0
37.the exact output is: My cat had green eyes.
39.the price wll no longer be an int.
40. Again,it will be #price cents.
42.No they do not.
43.Yes it prins out exactly the same.
44.it doesnt ask you to input the price anymore.
45.you have two options.
make it so the  price is a set amount or input the price manually.
46. the empty method is a mutator.
47. if i enter the value of insertMoney() as 0 it will tell you to put a value higher than 0
48.if i put the greater or equal to operator, then you can put 0 without getting error.
50.
51. Yes it is possible, and the code will still compile.
53. No it is not possible for the balance to be set to a negative number after printing a ticket.
54.=addition,- subtraction,* multiplation,/ division, % modulus
55. saving=price* discount;
56. mean = total/count
59.this version of refundBalance() does not give the same outcome because its from the naive machine. balance =0 which means you will never get a refund.
60.i learned, the return statement immediately exits the method that it is in. so the balance will give you an error message("unreachable statement")
61. Yes this new version can be complied.
